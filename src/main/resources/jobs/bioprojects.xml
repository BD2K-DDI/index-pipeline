<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:bean="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
		                   http://www.springframework.org/schema/batch
                           http://www.springframework.org/schema/batch/spring-batch.xsd
		                   http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <description>
        This job generate the XML for a Bioprojects to be submitted to OmicsDI system.
    </description>

    <import resource="../context/common-context.xml"/>
    <import resource="../context/db-job-repository.xml"/>
    <import resource="../context/mongo-db-context.xml" />



    <batch:job id="ddiImportJob" xmlns="http://www.springframework.org/schema/batch">

        <!-- EB-eye XML generation for public project -->
        <batch:step id="genEbEyeXmlStep" parent="parentStep" next="validateXMLStep">
            <batch:tasklet>
                <bean:bean id="genEbEyeXmlTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.generation.GenerateFromAPIOmicsDITasklet">
                    <bean:property name="generator" ref="bioprojectsGenerator"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="validateXMLStep" parent="parentStep" next="importDataStep">
            <batch:tasklet>
                <bean:bean id="validateEbEXmlTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.validation.ValidationOriginalDataTasklet">
                    <bean:property name="directory" value="${ddi.common.original.directory}/${ddi.common.bioprojects.database.index}"/>
                    <bean:property name="reportName" value="${ddi.common.original.report.name}"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="importDataStep" parent="parentStep" next="cleanStep">
            <batch:tasklet>
                <bean:bean id="annotationTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.database.DatasetImportTasklet">
                    <bean:property name="inputDirectory" value="file:/nfs/nobackup/pride/ebeye_files/tmp/original/bioprojects"/>
                    <bean:property name="datasetAnnotationService" ref="datasetAnnotationService" />
                    <bean:property name="databaseAnnotationService" ref="databaseAnnotationService" />
                    <bean:property name="databaseName" value="GEO" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="cleanStep" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="cleanTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CleanDirectoryTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.prod.directory}/${ddi.common.bioprojects.database.index}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:listeners>
            <batch:listener ref="jobListener"/>
        </batch:listeners>
    </batch:job>

    <batch:step id="parentStep" abstract="true">
        <batch:listeners>
            <batch:listener ref="executionContextPromotionListener"/>
            <batch:listener ref="throwablePromotionListener"/>
        </batch:listeners>
    </batch:step>

    <!--listener for promoting properties in step execution context to job execution context-->
    <bean:bean id="executionContextPromotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <bean:property name="keys">
            <bean:array>
                <bean:value>public.path.fragment</bean:value>
                <!-- added by getAndStoreOrigPublicationDateTaskletStep; used by genPublicSearchParamsStep -->
            </bean:array>
        </bean:property>
        <bean:property name="strict" value="false"/>
    </bean:bean>

    <bean:bean id="bioprojectsClient" class="uk.ac.ebi.ddi.api.readers.bioprojects.ws.client.BioprojectsClient">
        <constructor-arg index="0" value="/nfs/pride/prod/ddi/pipeline/testDev/BioProjects"/>
        <constructor-arg index="1" value="GEO"/>
    </bean:bean>

    <bean:bean id="bioprojectsGenerator" class="uk.ac.ebi.ddi.api.readers.bioprojects.GenerateBioprojectsOmicsXML">
        <constructor-arg index="0" ref="bioprojectsClient"></constructor-arg>
        <bean:constructor-arg index="1" value="${ddi.common.original.directory}/${ddi.common.bioprojects.database.index}"/>
        <bean:constructor-arg index="2" value="#{currentDate}"/>
    </bean:bean>

    <!--load property files-->
    <context:property-placeholder location="classpath:prop/common.properties" ignore-unresolvable="true" order="1"/>

</beans>