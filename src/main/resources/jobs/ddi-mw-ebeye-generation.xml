<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:bean="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
		                   http://www.springframework.org/schema/batch
                           http://www.springframework.org/schema/batch/spring-batch.xsd
		                   http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.1.xsd">


<description>
        This job generate the XML for a Metabolome Workbench to be submitted to OmicsDI system.
    </description>

    <batch:job id="ddiXMLJob" xmlns="http://www.springframework.org/schema/batch">

        <!-- EB-eye XML generation for public project -->


        <batch:step id="genEbEyeXmlStep" parent="parentStep" next="validateXMLStep">
            <batch:tasklet>
                <bean:bean id="genEbEyeXmlTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.ebemw.GenerateEBeyeMwXMLTasklet">
                    <bean:property name="outputDirectory" value="${ddi.common.mw.original.directory}"/>
                    <bean:property name="configProd" ref="mwWsConfig"/>
                    <bean:property name="taxWsConfigProd" ref="taxWsConfig"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="validateXMLStep" parent="parentStep" next="copyFilesToData">
            <batch:tasklet>
                <bean:bean id="validateEbEXmlTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.validation.ValidationOriginalDataTasklet">
                    <bean:property name="directory" value="${ddi.common.mw.original.directory}"/>
                    <bean:property name="reportName" value="${ddi.common.original.report.name}"/>
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="copyFilesToData" parent="parentStep" next="enrichFiles">
            <batch:tasklet>
                <bean:bean id="copyFilesToDataOrigin" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.io.CopyFilesFromSourceTasklet">
                    <bean:property name="sourceDirectory" value="file:${ddi.common.mw.original.directory}" />
                    <bean:property name="targetDirectory" value="file:${ddi.common.mw.data.directory}" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="enrichFiles" parent="parentStep" next="similarityStep">
            <batch:tasklet>
                <bean:bean id="enrichPRIDETasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.annotation.AnnotationXMLTasklet">
                    <bean:property name="inputDirectory" value="file:${ddi.common.mw.data.directory}"/>
                    <bean:property name="outputDirectory" value="file:${ddi.common.mw.prod.directory}"/>
                    <bean:property name="numberEntries"   value="${ddi.common.number.entries}"/>
                    <bean:property name="prefixFile"      value="${ddi.common.mw.prefix}" />
                    <bean:property name="annotationService" ref="annotationService"/>
                    <bean:property name="dataType" >
                        <util:constant static-field="uk.ac.ebi.ddi.annotation.utils.DataType.METABOLOMICS_DATA"/>
                    </bean:property>
                    <bean:property name="ddiExpDataImportService" ref="ddiExpDataImportService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:step id="similarityStep" parent="parentStep">
            <batch:tasklet>
                <bean:bean id="similarityScoreTasklet" scope="step" class="uk.ac.ebi.ddi.pipeline.indexer.tasklet.similarity.SimilaryScoreTasklet">
                    <bean:property name="typeOfData">
                        <util:constant static-field="uk.ac.ebi.ddi.annotation.utils.DataType.METABOLOMICS_DATA"/>
                    </bean:property>
                    <bean:property name="mongoTemplate" ref="mongoTemplate" />
                    <bean:property name="termInDBService" ref="termInDBService"/>
                    <bean:property name="ddiExpDataImportService" ref="ddiExpDataImportService"/>
                    <bean:property name="ddiExpDataProcessService" ref="ddiExpDataProcessService"/>
                    <bean:property name="expOutputDatasetService" ref="expOutputDatasetService" />
                </bean:bean>
            </batch:tasklet>
        </batch:step>

        <batch:listeners>
            <batch:listener ref="jobListener"/>
        </batch:listeners>
    </batch:job>

    <batch:step id="parentStep" abstract="true">
        <batch:listeners>
            <batch:listener ref="executionContextPromotionListener"/>
            <batch:listener ref="throwablePromotionListener"/>
        </batch:listeners>
    </batch:step>

    <!--listener for promoting properties in step execution context to job execution context-->
    <bean:bean id="executionContextPromotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <bean:property name="keys">
            <bean:array>
                <bean:value>public.path.fragment</bean:value>
                <!-- added by getAndStoreOrigPublicationDateTaskletStep; used by genPublicSearchParamsStep -->
            </bean:array>
        </bean:property>
        <bean:property name="strict" value="false"/>
    </bean:bean>

    <bean:bean id="annotationService" class="uk.ac.ebi.ddi.annotation.service.DDIAnnotationService"/>

    <!--load property files-->
    <context:property-placeholder location="classpath:prop/common.properties" ignore-unresolvable="true" order="1"/>



</beans>